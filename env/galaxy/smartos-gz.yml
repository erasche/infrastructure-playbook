---

- name: Bootstrap python
  hosts: smartosglobalzones
  gather_facts: false
  vars:
    pkgsrc_bootstrap_tar: bootstrap-trunk-tools-20200124.tar.gz
    pkgsrc_bootstrap_sha: 80adb2d113af4ea9742a3e467dc954ded6b48845
  pre_tasks:
    - name: Bootstrap GZ pkgsrc tools
      raw: >-
        bash -c 'test -e /opt/tools/bin/pkgin || (
        cd /var/tmp &&
        curl -kO https://pkgsrc.joyent.com/packages/SmartOS/bootstrap/{{ pkgsrc_bootstrap_tar }} &&
        [ "{{ pkgsrc_bootstrap_sha }}" = "$(/bin/digest -a sha1 {{ pkgsrc_bootstrap_tar }})" ] &&
        tar -zxpf {{ pkgsrc_bootstrap_tar }} -C /
        )'
      register: output
      changed_when: output.stdout != ""

    - name: Bootstrap Python for Ansible
      raw: >-
        bash -c 'test -e /opt/tools/bin/python3 || (
        /opt/tools/bin/pkgin -y update ;
        /opt/tools/bin/pkgin -y install python37
        )'
      register: output
      changed_when: output.stdout != ""

- name: Manage SmartOS GZs
  hosts: smartosglobalzones
  pre_tasks:
    - name: Set Smartos GZ config options
      lineinfile:
        dest: "/usbkey/config"
        regexp: "^{{ item.split('=')[0] }}=.*"
        line: "{{ item }}"
      loop:
        - "hostname={{ inventory_hostname_short }}"
        - "root_authorized_keys_file=root_authorized_keys"

  roles:
    # installs /usbkey/config.inc/root_authorized_keys
    - role: paths
    - role: copy
  tasks:
    - name: Perform imagadm commands
      imgadm:
        force: "{{ item.force | default(omit) }}"
        pool: "{{ item.pool | default(omit) }}"
        source: "{{ item.source | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        type: "{{ item.type | default(omit) }}"
        uuid: "{{ item.uuid | default(omit) }}"
      loop: "{{ smartos_images | default([]) }}"

    - name: Perform vmadm commands
      vmadm:
        archive_on_delete: "{{ item.archive_on_delete | default(omit) }}"
        autoboot: "{{ item.autoboot | default(omit) }}"
        boot: "{{ item.boot | default(omit) }}"
        brand: "{{ item.brand | default(omit) }}"
        cpu_cap: "{{ item.cpu_cap | default(omit) }}"
        cpu_shares: "{{ item.cpu_shares | default(omit) }}"
        cpu_type: "{{ item.cpu_type | default(omit) }}"
        customer_metadata: "{{ item.customer_metadata | default(omit) }}"
        delegate_dataset: "{{ item.delegate_dataset | default(omit) }}"
        disk_driver: "{{ item.disk_driver | default(omit) }}"
        disks: "{{ item.disks | default(omit) }}"
        dns_domain: "{{ item.dns_domain | default(omit) }}"
        docker: "{{ item.docker | default(omit) }}"
        filesystems: "{{ item.filesystems | default(omit) }}"
        firewall_enabled: "{{ item.firewall_enabled | default(omit) }}"
        force: "{{ item.force | default(omit) }}"
        fs_allowed: "{{ item.fs_allowed | default(omit) }}"
        hostname: "{{ item.hostname | default(omit) }}"
        image_uuid: "{{ item.image_uuid | default(omit) }}"
        indestructible_delegated: "{{ item.indestructible_delegated | default(omit) }}"
        indestructible_zoneroot: "{{ item.indestructible_zoneroot | default(omit) }}"
        internal_metadata: "{{ item.internal_metadata | default(omit) }}"
        internal_metadata_namespace: "{{ item.internal_metadata_namespace | default(omit) }}"
        kernel_version: "{{ item.kernel_version | default(omit) }}"
        limit_priv: "{{ item.limit_priv | default(omit) }}"
        maintain_resolvers: "{{ item.maintain_resolvers | default(omit) }}"
        max_locked_memory: "{{ item.max_locked_memory | default(omit) }}"
        max_lwps: "{{ item.max_lwps | default(omit) }}"
        max_physical_memory: "{{ item.max_physical_memory | default(omit) }}"
        max_swap: "{{ item.max_swap | default(omit) }}"
        mdata_exec_timeout: "{{ item.mdata_exec_timeout | default(omit) }}"
        # Doesn't work as name??
        #name: "{{ item.name | default(omit) }}"
        alias: "{{ item.name | default(item.alias | default(omit)) }}"
        nic_driver: "{{ item.nic_driver | default(omit) }}"
        nics: "{{ item.nics | default(omit) }}"
        nowait: "{{ item.nowait | default(omit) }}"
        qemu_extra_opts: "{{ item.qemu_extra_opts | default(omit) }}"
        qemu_opts: "{{ item.qemu_opts | default(omit) }}"
        quota: "{{ item.quota | default(omit) }}"
        ram: "{{ item.ram | default(omit) }}"
        resolvers: "{{ item.resolvers | default(omit) }}"
        routes: "{{ item.routes | default(omit) }}"
        spice_opts: "{{ item.spice_opts | default(omit) }}"
        spice_password: "{{ item.spice_password | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        tmpfs: "{{ item.tmpfs | default(omit) }}"
        uuid: "{{ item.uuid | default(omit) }}"
        vcpus: "{{ item.vcpus | default(omit) }}"
        vga: "{{ item.vga | default(omit) }}"
        virtio_txburst: "{{ item.virtio_txburst | default(omit) }}"
        virtio_txtimer: "{{ item.virtio_txtimer | default(omit) }}"
        vnc_password: "{{ item.vnc_password | default(omit) }}"
        vnc_port: "{{ item.vnc_port | default(omit) }}"
        zfs_data_compression: "{{ item.zfs_data_compression | default(omit) }}"
        zfs_data_recsize: "{{ item.zfs_data_recsize | default(omit) }}"
        zfs_filesystem_limit: "{{ item.zfs_filesystem_limit | default(omit) }}"
        zfs_io_priority: "{{ item.zfs_io_priority | default(omit) }}"
        zfs_root_compression: "{{ item.zfs_root_compression | default(omit) }}"
        zfs_root_recsize: "{{ item.zfs_root_recsize | default(omit) }}"
        zfs_snapshot_limit: "{{ item.zfs_snapshot_limit | default(omit) }}"
        zpool: "{{ item.zpool | default(omit) }}"
      loop: "{{ smartos_vms | default([]) }}"
