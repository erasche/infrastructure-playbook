---

#
# common
#

# for galaxyproject.mailman3's distribute_maps feature
primarymxservers_group_authorized_key_users: "{{ vault_primarymxservers_group_authorized_key_users }}"

primarymxservers_group_users:
  # ships with the OS but with the nologin shell
  - name: list
    shell: /bin/bash


#
# galaxyproject.postfix
#

postfix_role: mta
postfix_mailname: galaxyproject.org
postfix_backup_configs: true

postfix_config:
  alias_database: null
  alias_maps: "ldap:{{ postfix_config_dir }}/ldap-aliases.cf, ldap:{{ postfix_config_dir }}/ldap-local.cf"
  local_recipient_maps: $alias_maps
  mnetworks_style: null
  mynetworks: "127.0.0.0/8 {{ (ansible_default_ipv4.network ~ '/' ~ ansible_default_ipv4.netmask) |ipaddr('network/prefix') }} [::1]/128 [fe80::]/64"
  proxy_interfaces: "{{ ansible_ec2_public_ipv4 }}"
  recipient_delimiter: +
  relay_recipient_maps: hash:{{ mailman3_distribute_maps_dir }}/postfix_lmtp
  relay_domains: "{{ mailman3_domains | join(', ') }}"
  smtpd_relay_restrictions: permit_mynetworks, reject_unauth_destination
  mydomain: galaxyproject.org
  mydestination: $myhostname, localhost.$mydomain, localhost, $mydomain
  # This config allows you to bypass the content_filter, but it's not needed since amavisd-new is configured to do the bypass
  #content_filter: null
  #smtpd_relay_restrictions: check_recipient_access hash:{{ postfix_config_dir }}/relay_restrictions, permit_mynetworks, permit_sasl_authenticated, defer_unauth_destination
  #parent_domain_matches_subdomains: debug_peer_list,fast_flush_domains,mynetworks,permit_mx_backup_networks,qmqpd_authorized_clients,relay_domains
postfix_master_config:
  # Override: since we are not using the blanket content_filter, need to disable relay_restrictions when reinjecting or
  # we create a loop
  localhost:10025-inet:
    args: |
      -o content_filter=
          -o local_recipient_maps=
          -o relay_recipient_maps=
          -o smtpd_restriction_classes=
          -o smtpd_delay_reject=no
          -o smtpd_client_restrictions=permit_mynetworks,reject
          -o smtpd_helo_restrictions=
          -o smtpd_sender_restrictions=
          -o smtpd_recipient_restrictions=permit_mynetworks,reject
          -o smtpd_data_restrictions=reject_unauth_pipelining
          -o smtpd_end_of_data_restrictions=
          -o mynetworks=127.0.0.0/8
          -o smtpd_error_sleep_time=0
          -o smtpd_soft_error_limit=1001
          -o smtpd_hard_error_limit=1000
          -o smtpd_client_connection_count_limit=0
          -o smtpd_client_connection_rate_limit=0
          -o receive_override_options=no_header_body_checks,no_unknown_recipient_checks
# For conditional content_filter
#          -o smtpd_relay_restrictions=permit_mynetworks,permit_sasl_authenticated,defer_unauth_destination

# I think these were originally based off https://verchick.com/mecham/public_html/spam/bypassing.html
# bypass_virus_checks_acl was not in my old config though
postfix_amavisd_new_config:
  '@bypass_spam_checks_acl': "@spam_lovers_acl = qw({{ mailman3_domains | join(' ') }})"
  '@spam_kill_level_maps': ({'{{ mailman3_domains | join("' => 9999, '") }}' => 9999}, \$sa_kill_level_deflt,)
  '@bypass_virus_checks_acl': "@virus_lovers_acl = qw({{ mailman3_domains | join(' ') }})"

# templates/postfix/relay_restrictions.j2 in the playbook
#postfix_maps:
#  - postfix/relay_restrictions
