---

#
# common
#

listservers_group_authorized_key_users: "{{ vault_listservers_group_authorized_key_users }}"

# for galaxyproject.mailman3's distribute_maps feature
listservers_group_private_key_users: "{{ vault_listservers_group_private_key_users }}"

listservers_group_packages:
  # not all of mailman3's cext deps have wheels available
  - build-essential
  - python3-dev
  # for xapian-haystack
  - libxapian30
  # for natefoo.postgresql_objects
  - python3-psycopg2

#
# galaxyproject.postgresql + natefoo.postgresql_objects
#

postgresql_version: 10
postgresql_objects_users:
  - name: www-data
  - name: list
postgresql_objects_databases:
  - name: mailman3_web
    owner: www-data
  - name: mailman3_core
    owner: list

# This is only used by the listservers.yml playbook itself to relocate the pgdata dir into the Mailman EBS volume
mailman3_pgdata: /var/opt/mailman3/postgresql

#
# galaxyproject.galaxy
#

postfix_role: mda
postfix_mailname: "{{ inventory_hostname }}"

# This is set by default in galaxyproject.mailman3, but if we don't set it here you can't run the postfix role w/o the
# mailman role since it's used in postfix_config.
postfix_mailman3_var_dir: /var/opt/mailman3/core
postfix_config:
  proxy_interfaces: "{{ ansible_ec2_public_ipv4 }}"
  transport_maps: hash:{{ postfix_mailman3_var_dir }}/data/postfix_lmtp
  local_recipient_maps: hash:{{ postfix_mailman3_var_dir }}/data/postfix_lmtp
  relay_domains: hash:{{ postfix_mailman3_var_dir }}/data/postfix_domains

postfix_amavisd_new_config:
  '@local_domains_acl': (".$mydomain", "{{ mailman3_domains | join('", "') }}")
  # don't alter subject
  $sa_spam_subject_tag: null
  # always add headers
  $sa_tag_level_deflt: -9999
  # add "spam detected" headers at this level
  $sa_tag2_level_deflt: 6.31
  # discard viruses, spam, and messages containing banned files
  $final_virus_destiny: D_DISCARD
  $final_banned_destiny: D_DISCARD
  $final_spam_destiny: D_DISCARD
  $final_bad_header_destiny: D_PASS
  # FIXME: need spamassassin plugin for mailman
  # don't check spam bound for Mailman (Mailman does it itself)
  #'@bypass_spam_checks_acl': @spam_lovers_acl = qw({{ mailman3_domains | join(' ') }})
  #'@spam_kill_level_maps': ({'lists.galaxyproject.org' => 9999 }, \$sa_kill_level_deflt, )

postfix_aliases:
  mailer-daemon: postmaster
  postmaster: root
  nobody: root
  hostmaster: root
  usenet: root
  news: root
  webmaster: root
  www: root
  ftp: root
  abuse: root
  noc: root
  security: root
  postorius: root
  listmaster: root
  root: root@galaxyproject.org

#
# galaxyproject.mailman3
#

# These vars are in all.yml so that they can be used with MXs:
# - mailman3_domains
# - mailman3_distribute_maps_dir

mailman3_django_superusers: "{{ vault_mailman3_django_superusers }}"
mailman3_core_api_admin_user: "{{ vault_mailman3_core_api_admin_user }}"
mailman3_core_api_admin_pass: "{{ vault_mailman3_core_api_admin_pass }}"
mailman3_archiver_key: "{{ vault_mailman3_archiver_key }}"
# this isn't a role var, we just use it in the django config below
mailman3_django_secret_key: "{{ vault_mailman3_django_secret_key }}"

mailman3_config:
  mailman:
    site_owner: listmaster@lists.galaxyproject.org
  mta:
    # bypass the content filter (amavisd-new) for Mailman messages since they were scanned on the way in
    smtp_port: 10025
  database:
    class: mailman.database.postgresql.PostgreSQLDatabase
    url: postgres:///mailman3_core?host=/var/run/postgresql

mailman3_postorius_root: ''
mailman3_hyperkitty_root: 'archives/'

mailman3_django_config:
  secret_key: "{{ mailman3_django_secret_key }}"
  # mostly using django sites instead but FILTER_VHOST uses this
  use_x_forwarded_host: true
  # store on the filesystem instead of the database
  hyperkitty_attachment_folder: "{{ mailman3_django_var_dir }}/attachments"
  databases:
    default:
      ENGINE: django.db.backends.postgresql_psycopg2
      NAME: mailman3_web
      HOST: /var/run/postgresql

mailman3_django_haystack_engine: xapian_backend.XapianEngine

mailman3_extra_packages:
  - psycopg2-binary
  - xapian-haystack

# These are set in the distribute maps playbook's inventory file in [vars:all] and on the host
mailman3_distribute_maps:
  - host: all
    mailman3_distribute_maps_dir: "{{ mailman3_distribute_maps_dir }}"
    mailman3_postmap_command: /usr/sbin/postmap
  - host: artifact.galaxyproject.org
  - host: newtrail.galaxyproject.org

#
# galaxyproject.nginx + usegalaxy_eu.certbot
#

nginx_servers:
  - mailman
nginx_ssl_servers:
  - mailman_ssl

nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-www-data.pem

certbot_auto_renew: true
certbot_auto_renew_cron_file: ansible_certbot_auto_renew
certbot_auto_renew_user: root
#certbot_environment: staging
certbot_auth_method: --webroot
certbot_domains: "{{ [inventory_hostname] + mailman3_domains }}"
certbot_admin_email: nate@bx.psu.edu
certbot_agree_tos: --agree-tos
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - www-data
certbot_post_renewal: |
  systemctl restart nginx || true
